!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Blueprint={})}(this,(function(t){"use strict";const e=function(t){return!["number","boolean"].includes(typeof t)&&([Object,Array].includes((t||{}).constructor)&&!Object.entries(t||{}).length)},s=function(t,e=""){if(!t){if(e=["Assertion failed",e].join(": "),"undefined"!=typeof Error)throw new Error(e);throw e}},r=class{constructor(t={}){return this.elements=t,new Proxy(this,{get:(t,e,s)=>Reflect.has(t,e)?Reflect.get(t,e,s):t.elements[e]})}has(t){return this.values.includes(t)}get values(){return Object.values(this.elements)}},i=class extends Error{constructor(t){super(`The key '${t}' is missing from the object to be converted.`),this.name="MissingKeyError"}},n=class extends Error{constructor(t=null){super(`'${t}' is not a valid modifier.`),this.name="IllegalModifierError"}},o=Symbol("missing key or value"),c=new r({MAYBE:"maybe",OPTIONAL:"optional"}),h=new r({STRING:"STRING",NUMBER:"NUMBER",BOOLEAN:"BOOLEAN",ARRAY:"ARRAY"}),a=new r({PRIMITIVE:"PRIMITIVE",DESCRIPTOR:"DESCRIPTOR",FACTORY:"FACTORY"});class u{constructor(t={}){this.specification=t}make(t={}){const s={},r=e(t);return Object.entries(this.specification).forEach((([e,i])=>{(i=i.eject()).setKey(e);const n=new l(i);if(r)return void(s[e]=n.makeNullValue());n.extract(t)!==o&&(s[e]=n.extract(t))})),s}}class l{constructor(t){return this.descriptor=t.eject(),this}extract(t){if(this.descriptor.checkIsReady(),"object"==typeof t&&!t.hasOwnProperty(this.descriptor.key)){if(this.descriptor.hasModifier(c.MAYBE))return null;if(this.descriptor.hasModifier(c.OPTIONAL))return o;throw new i(this.descriptor.key)}return this.convert(this.descriptor.hasKey?t[this.descriptor.key]:t)}convert(t){if([null,void 0].includes(t)){if(this.descriptor.hasModifier(c.MAYBE))return null;if(this.descriptor.hasModifier(c.OPTIONAL))return o}const e=this.applyMutator(this.caster);return this.descriptor.type===h.ARRAY?t.map((t=>e(t))):e(t)}get caster(){return this.descriptor.casterType===a.DESCRIPTOR?t=>new l(this.descriptor.caster).extract(t):this.descriptor.caster}applyMutator(t){return this.descriptor.hasMutator?e=>t(this.descriptor.mutator(e)):t}makeNullValue(){return this.convert(this.descriptor.casterType===a.DESCRIPTOR?[]:"")}}class d extends Function{constructor(t,e=!1){switch(super(),this.type=t,this.key=null,this.caster=null,this.mutator=null,this.ejected=e,this.modifiers=[],t){case h.STRING:this.caster=String;break;case h.NUMBER:this.caster=Number;break;case h.BOOLEAN:this.caster=Boolean}return new Proxy(this,{get:(t,e,s)=>{if(Reflect.has(t,e))return Reflect.get(t,e,s);if(c.has(e))return(t=t.eject()).addModifier(e),t;if("string"==typeof e)throw new n(e)},apply:(t,e,s)=>(t=t.eject()).call(...s)})}call(...t){return t.length>0&&(t[0]instanceof d||t[0]instanceof Function)&&this.setType(h.ARRAY).setCaster(t.shift()),t.length>0&&this.setKey(t.shift()),t.length>0&&this.setMutator(t.shift()),this}setType(t){return this.type=t,this.checkType(),this}setCaster(t){return this.caster=t,this.checkCaster(),this}setKey(t){return s("string"==typeof t,"Key should be a string, but it is not."),e(this.key)&&(this.key=t),this}setMutator(t){return s("function"==typeof t,"Mutator should be a function, but it is not."),this.mutator=t,this}addModifier(t){this.modifiers.push(t)}checkType(){s(!e(this.type),"Descriptor type is not set."),s(h.has(this.type),"The descriptor type is not valid.")}checkCaster(){s(!e(this.caster),"Caster is not set."),s(a.has(this.casterType),"The caster is not valid.")}get hasKey(){return null!==this.key}hasModifier(t){return this.modifiers.includes(t)}get casterType(){if([String,Boolean,Number].includes(this.caster))return a.PRIMITIVE;if(this.caster instanceof d)return a.DESCRIPTOR;if(this.caster instanceof Function)return a.FACTORY;throw new Error("Caster is not set.")}get hasMutator(){return"function"==typeof this.mutator}checkIsReady(){s(this.ejected,"Descriptor has not been ejected."),this.checkType(),this.checkCaster()}eject(){return this.ejected?this:new d(this.type,!0)}}const f=new d(h.STRING),p=new d(h.NUMBER),y=new d(h.BOOLEAN),R=new d(h.ARRAY),T=t=>new u(t);t.$Boolean=y,t.$Many=R,t.$Number=p,t.$String=f,t.Blueprint=u,t.IllegalModifierError=n,t.MissingKeyError=i,t.blueprint=T,t.factory=t=>e=>T(t).make(e),Object.defineProperty(t,"__esModule",{value:!0})}));
